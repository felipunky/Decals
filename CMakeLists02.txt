cmake_minimum_required(VERSION 3.0...3.25)

project(
    DECALS 
    VERSION 0.0.1 
    DESCRIPTION "Different decal rendering techniques"
)

# add_definitions(-std=c++17)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")

set(SOURCE_PATH "${PROJECT_SOURCE_DIR}/src")
set(INCLUDE_PATH "${PROJECT_SOURCE_DIR}/include")

# file(GLOB_RECURSE HS "${INCLUDE_PATH}/*.h")
# file(GLOB_RECURSE CPPS "${SOURCE_PATH}/*.cpp")

if(DEFINED EMSCRIPTEN)
    message(STATUS "This is an EMSCRIPTEN build!")

    set(USE_FLAGS "-std=c++17 -g -s USE_SDL=2")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${USE_FLAGS}")
    #set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${USE_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${USE_FLAGS}")
    set(CMAKE_EXECUTABLE_SUFFIX .js)

    add_executable(App 
        "${SOURCE_PATH}/main.cpp"
    )

    set_target_properties(App PROPERTIES COMPILE_FLAGS "-O3")
	set_target_properties(App PROPERTIES LINK_FLAGS    "-O3 -s WASM=1 -s FULL_ES3=1 -s GL_DEBUG=1 -s MIN_WEBGL_VERSION=2 -s MAX_WEBGL_VERSION=2")

else()
    message(STATUS "This is not an EMSCRIPTEN build!")

    if(WIN32)
        set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
        set(BUILD_SHARED_LIBS TRUE)
    endif()

    add_library(calc SHARED
    "${SOURCE_PATH}/calc.cpp"
    "${INCLUDE_PATH}/calc.h"
    )

    add_executable(App 
        "${INCLUDE_PATH}/calc.h"
        "${SOURCE_PATH}/main.cpp"
    )

    target_include_directories(App PUBLIC
        ${INCLUDE_PATH}
    )

    target_link_libraries(App PUBLIC calc)
endif()

# target_include_directories(calc PUBLIC 
#     ${INCLUDE_PATH}
# )